# global section - you can override image in job section
# stages - shows the order of execution
image: node
stages:
  - caching
  - build
  - test
  - deploy to staging
  - deploy to production
  - production tests

variables:
  STAGING_DOMAIN: zoota-staging.surge.sh
  PRODUCTION_DOMAIN: zoota.surge.sh

# cache like node_modules we can generate every time when pipeline runs
# Policy - default is push and pull. We can't set policy at global level
# We do not need to pull cache for this job
# except - you can define when to run/not run job section
# only - you can specify this option to run this job only schedules
# to disable the job - add `.` in front of the title of the job
#                     example - .create cache:
# you should use cache key = ${CI_COMMIT_REF_SLUG}

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

# I have to redefine key/paths for cache again otherwise it won't upload cache
update cache:
  stage: caching
  script:
    - npm install
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: push  
  only:
    - schedules

# This cache will be created/uploaded because no cache section is specified.
# If you specify cache section, you must have to redefine key/paths or it wont upload
build cache:
  stage: caching
  script:
    - npm install
  except:
    - schedules  

build-website:
  stage: build
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby build
    - sed -i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA/" ./public/index.html
  artifacts:
    paths:
      - ./public
  except:
    - schedules  
test artifact:
  cache: {}
  image: alpine
  stage: test
  script:
    - grep -q "Gatsby" ./public/index.html
  except:
    - schedules  

test website:
  stage: test
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby serve &
    - sleep 3
    - curl "http://localhost:9000" | tac | tac | grep -q "Gatsby"
  except:
    - schedules  

# . disables the job
# a template you can use using anchor &,*,<<
.deploy-template: &deploy
  only:
    - master
  script:
    - npm install -g surge
    - surge --project ./public --domain $DOMAIN
  except:
    - schedules  
  environment:
    name: $NAME
    url: http://$DOMAIN  
  
# environment - to specify where you want to deploy    
# only: -master/merge_requests - Just run this job on master/merge_requests branch
deploy to staging:
  <<: *deploy
  cache: {}
  stage: deploy to staging
  variables:
    NAME: staging
    DOMAIN: $STAGING_DOMAIN
  
# when: manual - this will add a manual step and stop deploying to prod automatically
# allow_failure: false - this will block subsequent jobs to run until manual verification is passed
deploy to production:
  <<: *deploy
  cache: {}
  stage: deploy to production
  variables:
    NAME: production
    DOMAIN: $PRODUCTION_DOMAIN

#  when: manual
#  allow_failure: false 

post production tests:
  cache: {}
  stage: production tests
  only:
    - master  
  script:
    - curl -s "http://zoota.surge.sh/" | tac | tac | grep -q "Gatsby"
    - curl -s "http://zoota.surge.sh/" | tac | tac | grep -q "$CI_COMMIT_SHORT_SHA"
  except:
    - schedules